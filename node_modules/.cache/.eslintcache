[{"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\index.js":"1","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\App.js":"2","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\reportWebVitals.js":"3","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Alert.js":"4","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Navbar.js":"5","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\About.js":"6","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Create.js":"7","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Edit.js":"8","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Textform.js":"9","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Edit2.js":"10","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Delete.js":"11","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Concert.js":"12","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Login.js":"13","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\DeleteConfirm.js":"14","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Signup.js":"15","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\LoginValidation.js":"16","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\SignupValidation.js":"17","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Created.js":"18","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ConcertEntry.js":"19","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\loginStatus.js":"20","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Show.js":"21","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndId.js":"22","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndDelete.js":"23","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Delete2.js":"24","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Ticket.js":"25","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\CreateTicket.js":"26","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndBook.js":"27","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Booked.js":"28","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\DelTicket.js":"29","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\TicketDeleted.js":"30"},{"size":535,"mtime":1689687301440,"results":"31","hashOfConfig":"32"},{"size":5112,"mtime":1692958338964,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1689687301782,"results":"34","hashOfConfig":"32"},{"size":615,"mtime":1686769212610,"results":"35","hashOfConfig":"32"},{"size":2863,"mtime":1691052091538,"results":"36","hashOfConfig":"32"},{"size":4099,"mtime":1686767385704,"results":"37","hashOfConfig":"32"},{"size":4998,"mtime":1692190926571,"results":"38","hashOfConfig":"32"},{"size":2382,"mtime":1692170401491,"results":"39","hashOfConfig":"32"},{"size":3689,"mtime":1689594772875,"results":"40","hashOfConfig":"32"},{"size":4756,"mtime":1690873256453,"results":"41","hashOfConfig":"32"},{"size":1637,"mtime":1692170955234,"results":"42","hashOfConfig":"32"},{"size":719,"mtime":1689922417032,"results":"43","hashOfConfig":"32"},{"size":3052,"mtime":1690369808817,"results":"44","hashOfConfig":"32"},{"size":1281,"mtime":1689670199278,"results":"45","hashOfConfig":"32"},{"size":3023,"mtime":1689921484631,"results":"46","hashOfConfig":"32"},{"size":692,"mtime":1689788391764,"results":"47","hashOfConfig":"32"},{"size":773,"mtime":1689788570824,"results":"48","hashOfConfig":"32"},{"size":2166,"mtime":1692173596425,"results":"49","hashOfConfig":"32"},{"size":752,"mtime":1690369768356,"results":"50","hashOfConfig":"32"},{"size":418,"mtime":1690369778408,"results":"51","hashOfConfig":"32"},{"size":116,"mtime":1690371291258,"results":"52","hashOfConfig":"32"},{"size":3466,"mtime":1692170563216,"results":"53","hashOfConfig":"32"},{"size":3651,"mtime":1692172956537,"results":"54","hashOfConfig":"32"},{"size":3699,"mtime":1692171515570,"results":"55","hashOfConfig":"32"},{"size":634,"mtime":1692173287795,"results":"56","hashOfConfig":"32"},{"size":2450,"mtime":1692170526002,"results":"57","hashOfConfig":"32"},{"size":6009,"mtime":1692173336928,"results":"58","hashOfConfig":"32"},{"size":1966,"mtime":1692173080099,"results":"59","hashOfConfig":"32"},{"size":2025,"mtime":1692173138147,"results":"60","hashOfConfig":"32"},{"size":837,"mtime":1692173258272,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},"1ohqdso",{"filePath":"66","messages":"67","suppressedMessages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","suppressedMessages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"78","messages":"79","suppressedMessages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"81","messages":"82","suppressedMessages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","suppressedMessages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"65"},{"filePath":"89","messages":"90","suppressedMessages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"92","messages":"93","suppressedMessages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"65"},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","suppressedMessages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"103","messages":"104","suppressedMessages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"65"},{"filePath":"107","messages":"108","suppressedMessages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"110","messages":"111","suppressedMessages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113","usedDeprecatedRules":"65"},{"filePath":"114","messages":"115","suppressedMessages":"116","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"118","messages":"119","suppressedMessages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"121","messages":"122","suppressedMessages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","suppressedMessages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"131","messages":"132","suppressedMessages":"133","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"134","messages":"135","suppressedMessages":"136","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"137","usedDeprecatedRules":"65"},{"filePath":"138","messages":"139","suppressedMessages":"140","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"65"},{"filePath":"142","messages":"143","suppressedMessages":"144","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"65"},{"filePath":"146","messages":"147","suppressedMessages":"148","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"149","messages":"150","suppressedMessages":"151","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"152","usedDeprecatedRules":"65"},{"filePath":"153","messages":"154","suppressedMessages":"155","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"156","messages":"157","suppressedMessages":"158","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"159","messages":"160","suppressedMessages":"161","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"162","usedDeprecatedRules":"65"},{"filePath":"163","messages":"164","suppressedMessages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"65"},"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\index.js",[],[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\App.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\reportWebVitals.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Alert.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Navbar.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\About.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Create.js",["167","168","169","170"],[],"  import React,{useState,useEffect} from 'react'\r\n  // import db from './db';\r\n  import { Link, useNavigate } from 'react-router-dom'\r\n\r\n  export default function Concert() {\r\n    const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n      cname: '',\r\n      cimage: '',\r\n      tname: '',\r\n      timage: '',\r\n      date: '',\r\n      time: '',\r\n      ticket: '',\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      fetch(\"http://localhost:8081/Create\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          cname: values.cname,\r\n          cimage: values.cimage,\r\n          tname: values.tname,\r\n          timage: values.timage,\r\n          data: values.date,\r\n          time: values.time,\r\n          ticket: values.ticket\r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.message) {\r\n            setRegisterStatus(data.message);\r\n            navigate('/Created');\r\n          } else {\r\n            setRegisterStatus(\"Concert created\");\r\n            console.log(data);\r\n            navigate('/Created');\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    };\r\n  \r\n    const handleInput = (event) => {\r\n      setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n    };\r\n  \r\n    // useEffect(() => {\r\n    //   // Fetch data when the component mounts\r\n    //   fetch('http://localhost:8081/Created')\r\n    //     .then((res) => res.json())\r\n    //     .then((data) => {\r\n    //       // Update the state with the retrieved data\r\n    //       setConcertData(data);\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error('Error:', error);\r\n    //     });\r\n    // }, []); // Empty dependency array to fetch data only once when the component mounts\r\n  \r\n    return (\r\n      <>\r\n<div className='flex'>\r\n      <div className=' text-center'>\r\n          <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n    <button type=\"button\" className=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n    <button type=\"button\" className=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n    <button type=\"button\" className=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n  </div>\r\n  </div>\r\n\r\n  <h1>Create New Concert</h1>\r\n  <form className='mb-3'>\r\n  <div className=\"mb-3 container\">\r\n\r\n    <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 \">Concert Name</label>\r\n    <input type=\"text\" onChange={handleInput} name='cname' className=\" my-2  \" id=\"Concert_Name\" placeholder=\"Enter Concert Name\"/>\r\n    <label htmlFor=\"formFile\" className=\"form-label col-5 \"></label>\r\n    <label htmlFor=\"formFile\" className=\"form-label mb-3 my-3 mx-2  \">Concert Image</label>\r\n    <input className=\"\" onChange={handleInput} name='cimage' type=\"file\" alt='image' id=\"Concert_Image\"></input>\r\n    \r\n  </div>\r\n  <div className=\"mb-3 container\">\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3\">Team Name</label>\r\n    <input type=\"email\" onChange={handleInput} name='tname' className=\"my-2 mx-3 \" id=\"Team_Name\" placeholder=\"Enter Team Name\"/>\r\n    <label htmlFor=\"formFile\" className=\"form-label col-5 \"></label>\r\n    <label htmlFor=\"formFile\" className=\"form-label mb-3 my-3 mx-2\">Team Image</label>\r\n    <input className=\"mx-1\" onChange={handleInput} name='timage' type=\"file\" alt='image' id=\"Team_Image\"></input>\r\n  </div>\r\n  <div className=\"mb-3 container\">\r\n    <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-5\" type=\"date\">Date</label>\r\n    <input type=\"text\" onChange={handleInput} name='date' className=\"my-2 mx-1\" id=\"date\" placeholder=\"Set Date\"/>\r\n    <label htmlFor=\"formFile\" className=\"form-label col-6 \"></label>\r\n    <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mx-2\">Time</label>\r\n    <input type=\"time\" onChange={handleInput}name='time' className=\"mx-1\" id=\"time\" placeholder=\"Set Time\"/>\r\n  </div>\r\n  <div className='text-center'>\r\n  <div className=\"mb-3\">\r\n\r\n    <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 col-1\">Ticket Charges</label>\r\n    <input type=\"number\" onChange={handleInput} name='ticket' className=\"\" id=\"Ticket_Fee\" placeholder=\"Ticket Fee\"/>\r\n  </div>\r\n\r\n  <div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\" >Submit</button>\r\n  </div>\r\n\r\n  </div>\r\n  </form>\r\n  </div>\r\n      \r\n      </> \r\n    )\r\n};\r\n  \r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Edit.js",["171"],[],"import React,{useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nexport default function Concert() {\r\n  // const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  // const [values, setValues] = useState({\r\n  //   cname: '',\r\n  //   cimage: '',\r\n  //   tname: '',\r\n  //   timage: '',\r\n  //   date: '',\r\n  //   time: '',\r\n  //   ticket: '',\r\n  // });\r\n  // const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  // const handleSubmit2 = (e) => {\r\n  //   e.preventDefault();\r\n\r\n  //   fetch(\"http://localhost:8081/Edit\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       cname: values.id\r\n  //     }),\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => {\r\n  //       if (data.message) {\r\n  //         setRegisterStatus(data.message);\r\n  //         navigate('/Edit2');\r\n  //       } else {\r\n  //         setRegisterStatus(\"Concert created\");\r\n  //         console.log(data);\r\n  //         navigate('/Edit2');\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error:\", error);\r\n  //     });\r\n  // };\r\n\r\n  // const handleInput = (event) => {\r\n  //   setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  // };\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n   navigate('/ShowAndId');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" class=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" class=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" class=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n</div>\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success my-3\">Show Concerts</button>\r\n</div>\r\n\r\n<h1>Show Concert</h1>\r\n<div className='text-center'>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Textform.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Edit2.js",["172","173","174","175","176","177"],[],"import React,{useState,useEffect} from 'react'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nconst a=document.getElementById(\"id\");\r\nexport default function Concert() {\r\n  \r\n \r\n  const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    const [values, setValues] = useState({\r\n      id:'',\r\n      cname: '',\r\n      cimage: '',\r\n      tname: '',\r\n      timage: '',\r\n      date: '',\r\n      time: '',\r\n      ticket: '',\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      fetch(\"http://localhost:8081/Edit2\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          id: values.id,\r\n          cname: values.cname,\r\n          cimage: values.cimage,\r\n          tname: values.tname,\r\n          timage: values.timage,\r\n          data: values.date,\r\n          time: values.time,\r\n          ticket: values.ticket\r\n         \r\n        }),\r\n      })\r\n        .then((res) => res.json())\r\n        .then((data) => {\r\n          if (data.message) {\r\n            setRegisterStatus(data.message);\r\n            navigate('/ShowAndId');\r\n            a=values.id;\r\n          } else {\r\n            setRegisterStatus(\"Concert created\");\r\n            console.log(data);\r\n            navigate('/ShowAndId');\r\n            a=values.id;\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n    };\r\n    const handleInput = (event) => {\r\n      const { name, value } = event.target;\r\n      setValues((prev) => ({ ...prev, [name]: value }));\r\n    };\r\n  \r\n  return (\r\n\r\n    <>\r\n    <div className='text-center'>\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-success\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n</div>\r\n</div>\r\n\r\n<h1>Edit Existing Concert</h1>\r\n<div className='text-center'>\r\n\r\n</div>\r\n<div className=\"mb-3 container\">\r\n<label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 \">Concert Id</label>\r\n  <input type=\"number\" onChange={handleInput} className=\"\" value={a} name=\"id\" placeholder=\"Concert ID to Edit\" id=\"id\" />\r\n\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3\">Concert Name</label>\r\n  <input type=\"text\"  onChange={handleInput} className=\" my-2\" name=\"cname\" id=\"Concert_Name\" placeholder=\"Enter Concert Name\"/>\r\n  <label htmlFor=\"formFile\" className=\"form-label col-5 \"></label>\r\n  <label htmlFor=\"formFile\" className=\"form-label mb-3 my-3 mx-2  \">Concert Image</label>\r\n  <input className=\"\"  onChange={handleInput} type=\"file\" name=\"cimage\" alt='image' id=\"Concert_Image\"></input>\r\n  \r\n</div>\r\n<div className=\"mb-3 container\">\r\n<label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3\">Team Name</label>\r\n  <input type=\"email\"  onChange={handleInput} name=\"tname\"className=\"my-2 mx-3 \" id=\"Team_Name\" placeholder=\"Enter Team Name\"/>\r\n  <label htmlFor=\"formFile\" className=\"form-label col-5 \"></label>\r\n  <label htmlFor=\"formFile\" className=\"form-label mb-3 my-3 mx-2\">Team Image</label>\r\n  <input className=\"mx-1\"  onChange={handleInput} name=\"timage\"type=\"file\" alt='image' id=\"Team_Image\"></input>\r\n</div>\r\n<div className=\"mb-3 container\">\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-5\" type=\"date\">Date</label>\r\n  <input type=\"date\"  onChange={handleInput} name=\"date\" className=\"my-2 mx-1\" id=\"date\" placeholder=\"Set Date\"/>\r\n  <label htmlFor=\"formFile\" className=\"form-label col-6 \"></label>\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mx-2\">Time</label>\r\n  <input type=\"time\"  onChange={handleInput} className=\"mx-1\" name=\"time\" id=\"time\" placeholder=\"Set Time\"/>\r\n</div>\r\n<div className='text-center'>\r\n<div className=\"mb-3\">\r\n\r\n  <label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 col-1\">Ticket Charges</label>\r\n  <input type=\"number\"  onChange={handleInput} className=\"\" name=\"ticket\" id=\"Ticket_Fee \" placeholder=\"Ticket Fee\"/>\r\n</div>\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Submit</button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    \r\n    </>\r\n\r\n\r\n\r\n   \r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Delete.js",["178"],[],"import React,{useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nexport default function Delete() {\r\n  // const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  // const [values, setValues] = useState({\r\n  //   cname: '',\r\n  //   cimage: '',\r\n  //   tname: '',\r\n  //   timage: '',\r\n  //   date: '',\r\n  //   time: '',\r\n  //   ticket: '',\r\n  // });\r\n  // const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  \r\n  // const handleInput = (event) => {\r\n  //   setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  // };\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n   navigate('/ShowAndDelete');\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" class=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" class=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" class=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n</div>\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success my-3\">Show Concerts</button>\r\n</div>\r\n\r\n<h1>Show Concert</h1>\r\n<div className='text-center'>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Concert.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Login.js",["179"],[],"import React, { useState,useContext } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport validation from './SignupValidation';\r\nimport { useNavigate } from 'react-router-dom';\r\n// import { loginStatus, IntegerProvider }  from './loginStatus';\r\n\r\nexport default function Login() {\r\n  // const { sharedInteger, setSharedInteger } = useContext(loginStatus);\r\n\r\n  // const [email, setemail] = useState(\"\");\r\n  // const [password, setpassword] = useState(\"\");\r\n  const [loginStatus2, setloginStatus2] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validation(values))\r\n\r\n    fetch(\"http://localhost:8081/Login\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        email: values.email,\r\n        password: values.password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          setloginStatus2(data.message);\r\n          console.log(data.message)\r\n          // setSharedInteger(0);\r\n        } else {\r\n          setloginStatus2(data[0].email);\r\n          console.log(data[0].email)\r\n          if(data[0].email===loginStatus2){\r\n            // setSharedInteger(0);\r\n            navigate('/Concert')}\r\n          \r\n          \r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n        // setSharedInteger(0);\r\n      });\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {/* <div>{sharedInteger}</div>; */}\r\n      <div className='d-flex justify-content-center align-items-center bg-primary vh-100 '>\r\n        <div className='bg-white p-3 rounded w-25'>\r\n          <form className=\"mb-3\">\r\n            <div>\r\n              <label htmlFor='email'><strong>Email</strong></label>\r\n              <input type='email' onChange={handleInput} className='form-control rounded-0' id=\"email\" name=\"email\" placeholder='Enter Email' />\r\n              {errors.email && <span className='text-danger'>{errors.email}</span>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='password'><strong>Password</strong></label>\r\n              <input type='password' onChange={handleInput} className='form-control rounded-0' id=\"password\" name=\"password\" placeholder='Enter Password' />\r\n              {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n            </div>\r\n            <button type=\"submit\" onClick={handleSubmit} className='btn btn-success w-100' >Log in</button>\r\n            <p>You agree to terms and conditions*</p>\r\n            <Link to='/Signup' className='btn btn-default-border w-100 bg-light text-decoration-none'>Sign up</Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\DeleteConfirm.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Signup.js",["180"],[],"import React, { useState } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport validation from './SignupValidation';\r\n\r\nexport default function Signup() {\r\n  // const [name, setname] = useState(\"\");\r\n  // const [email, setemail] = useState(\"\");\r\n  // const [password, setpassword] = useState(\"\");\r\n  const [registerStatus, setregisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    name: \"\",\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setErrors(validation(values))\r\n\r\n    fetch(\"http://localhost:8081/Signup\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        name: values.name,\r\n        email: values.email,\r\n        password: values.password,\r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          setregisterStatus(data.message);\r\n        } else {\r\n          setregisterStatus(\"Account created\");\r\n          console.log(data)\r\n          navigate('/Login')\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n  const handleInput = (event) => {\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className='d-flex justify-content-center align-items-center bg-primary vh-100 '>\r\n        <div className='bg-white p-3 rounded w-25'>\r\n          <form className=\"mb-3\">\r\n            <div>\r\n              <label htmlFor='text'><strong>Name</strong></label>\r\n              <input type='text' onChange={handleInput} className='form-control rounded-0' id=\"name\" name=\"name\" placeholder='Enter Name' />\r\n              {errors.name && <span className='text-danger'>{errors.name}</span>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='email'><strong>Email</strong></label>\r\n              <input type='email' onChange={handleInput} className='form-control rounded-0' id=\"email\" name=\"email\" placeholder='Enter Email' />\r\n              {errors.email && <span className='text-danger'>{errors.email}</span>}\r\n            </div>\r\n            <div>\r\n              <label htmlFor='password'><strong>Password</strong></label>\r\n              <input type='password' onChange={handleInput} className='form-control rounded-0' id=\"password\" name=\"password\" placeholder='Enter Password' />\r\n              {errors.password && <span className='text-danger'>{errors.password}</span>}\r\n            </div>\r\n            <button type=\"submit\" onClick={handleSubmit} className='btn btn-success w-100' >Sign up</button>\r\n            <p>You agree to terms and conditions*</p>\r\n            <Link to='/Login' className='btn btn-default-border w-100 bg-light text-decoration-none'>Log in</Link>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\LoginValidation.js",[],[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\SignupValidation.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Created.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ConcertEntry.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\loginStatus.js",[],[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Show.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndId.js",["181","182"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nlet a=0;\r\n\r\n function ShowAndId() {\r\n    const [concertData, setConcertData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/ShowAndId');\r\n        const data = await response.json();\r\n        if (Array.isArray(data)) {\r\n          setConcertData(data);\r\n        } else {\r\n          setConcertData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setConcertData([]); // If there's an error, set concertData to an empty array\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    cname: '',\r\n    cimage: '',\r\n    tname: '',\r\n    timage: '',\r\n    date: '',\r\n    time: '',\r\n    ticket: '',\r\n  });\r\n  // const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:8081/Edit2\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        cname: values.id,\r\n\r\n       \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n          a=values.id;\r\n    console.log(a);\r\n          setRegisterStatus(data.message);\r\n          navigate('/Edit2');\r\n        } else {\r\n          a=values.id;\r\n    console.log(a);\r\n          setRegisterStatus(\"Concert created\");\r\n          console.log(data);\r\n          navigate('/Edit2');\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n  // const handleInput = (event) => {\r\n    \r\n\r\n  //   setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n\r\n  // };\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n</div>\r\n\r\n<div>\r\n  <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Concert Name</th>\r\n        <th>Team Name</th>\r\n        <th>Date</th>\r\n        <th>Time</th>\r\n        <th>Ticket Fee</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {concertData.map((concert, index) => (\r\n        <tr key={index}>\r\n          <td>{concert.id}</td>\r\n          <td>{concert.cname}</td>\r\n          <td>{concert.tname}</td>\r\n          <td>{concert.date}</td>\r\n          <td>{concert.time}</td>\r\n          <td>{concert.ticket}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h1>Edit Concert</h1>\r\n<div className='text-center'>\r\n\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Edit</button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default ShowAndId;\r\n\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndDelete.js",["183","184","185"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// let a=0;\r\n\r\n function ShowAndDelete() {\r\n    const [concertData, setConcertData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/ShowAndId');\r\n        const data = await response.json();\r\n        if (Array.isArray(data)) {\r\n          setConcertData(data);\r\n        } else {\r\n          setConcertData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setConcertData([]); // If there's an error, set concertData to an empty array\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    id:'',\r\n   \r\n  });\r\n  const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:8081/ShowAndDelete\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: values.id,\r\n\r\n       \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n        //   a=values.id;\r\n    // console.log(a);\r\n          setRegisterStatus(data.message);\r\n          navigate('/Delete2');\r\n        } else {\r\n        //   a=values.id;\r\n    // console.log(a);\r\n          setRegisterStatus(\"Concert created\");\r\n          console.log(data);\r\n          navigate('/Delete2');\r\n        // navigate('/ShowAndDelete');\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n  const handleInput = (event) => {\r\n    \r\n\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n\r\n  };\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-danger\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Delete\">Delete Concert</Link></button>\r\n</div>\r\n\r\n<div>\r\n  <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Concert Name</th>\r\n        <th>Team Name</th>\r\n        <th>Date</th>\r\n        <th>Time</th>\r\n        <th>Ticket Fee</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {concertData.map((concert, index) => (\r\n        <tr key={index}>\r\n          <td>{concert.id}</td>\r\n          <td>{concert.cname}</td>\r\n          <td>{concert.tname}</td>\r\n          <td>{concert.date}</td>\r\n          <td>{concert.time}</td>\r\n          <td>{concert.ticket}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h1>Delete Concert</h1>\r\n<div className='text-center'>\r\n\r\n<label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 \">Concert Id</label>\r\n  <input type=\"number\" onChange={handleInput} className=\"\" name=\"id\" placeholder=\"Concert ID to Edit\" id=\"id\" />\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Delete</button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default ShowAndDelete;\r\n\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Delete2.js",["186"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nlet a=0;\r\n\r\n function Delete2() {\r\n    const [concertData, setConcertData] = useState([]);\r\nconst navigate=useNavigate()\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      try {\r\n        const response = await fetch('http://localhost:8081/ShowAndId');\r\n        const data = await response.json();\r\n        if (Array.isArray(data)) {\r\n          setConcertData(data);\r\n        } else {\r\n          setConcertData([]);\r\n        }\r\n      } catch (error) {\r\n        console.error('Error:', error);\r\n        setConcertData([]); // If there's an error, set concertData to an empty array\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n  // const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  // const navigate = useNavigate();\r\n  // const [values, setValues] = useState({\r\n  //   cname: '',\r\n  //   cimage: '',\r\n  //   tname: '',\r\n  //   timage: '',\r\n  //   date: '',\r\n  //   time: '',\r\n  //   ticket: '',\r\n  // });\r\n  // const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  // const handleSubmit = (e) => {\r\n    \r\n  //   e.preventDefault();\r\n\r\n  //   fetch(\"http://localhost:8081/Edit2\", {\r\n  //     method: \"POST\",\r\n  //     headers: {\r\n  //       \"Content-Type\": \"application/json\",\r\n  //     },\r\n  //     body: JSON.stringify({\r\n  //       cname: values.id,\r\n\r\n       \r\n  //     }),\r\n  //   })\r\n  //     .then((res) => res.json())\r\n  //     .then((data) => {\r\n  //       if (data.message) {\r\n  //         a=values.id;\r\n  //   console.log(a);\r\n  //         setRegisterStatus(data.message);\r\n  //         navigate('/Edit2');\r\n  //       } else {\r\n  //         a=values.id;\r\n  //   console.log(a);\r\n  //         setRegisterStatus(\"Concert created\");\r\n  //         console.log(data);\r\n  //         navigate('/Edit2');\r\n  //       }\r\n  //     })\r\n  //     .catch((error) => {\r\n  //       console.error(\"Error:\", error);\r\n  //     });\r\n  // };\r\n  // const handleInput = (event) => {\r\n    \r\n\r\n  //   setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n\r\n  // };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n   navigate('/ShowAndDelete');\r\n  };\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" className=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/Create\">Create New Concert</Link></button>\r\n  <button type=\"button\" className=\"btn btn-warning\"><Link className=\"nav-link \" aria-current=\"page\" to=\"/Edit\">Edit Concert</Link></button>\r\n  <button type=\"button\" onClick={handleSubmit} className=\"btn btn-danger\">Delete Concert</button>\r\n</div>\r\n\r\n<div>\r\n  <table className=\"table\">\r\n    <thead>\r\n      <tr>\r\n        <th>ID</th>\r\n        <th>Concert Name</th>\r\n        <th>Team Name</th>\r\n        <th>Date</th>\r\n        <th>Time</th>\r\n        <th>Ticket Fee</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {concertData.map((concert, index) => (\r\n        <tr key={index}>\r\n          <td>{concert.id}</td>\r\n          <td>{concert.cname}</td>\r\n          <td>{concert.tname}</td>\r\n          <td>{concert.date}</td>\r\n          <td>{concert.time}</td>\r\n          <td>{concert.ticket}</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </table>\r\n</div>\r\n\r\n<h1>Concert Deleted</h1>\r\n<div className='text-center'>\r\n\r\n\r\n<div><button  type=\"button\"  className=\"btn btn-success\"><Link className='nav-link'to={handleSubmit}>Back</Link></button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default Delete2;\r\n\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Ticket.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\CreateTicket.js",["187","188"],[],"import React,{useState,useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom'\r\nexport default function CreateTicket() {\r\n    // const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n    const navigate = useNavigate();\r\n    // const [values, setValues] = useState({\r\n    //   cname: '',\r\n    //   cimage: '',\r\n    //   tname: '',\r\n    //   timage: '',\r\n    //   date: '',\r\n    //   time: '',\r\n    //   ticket: '',\r\n    // });\r\n    // const [errors, setErrors] = useState({});\r\n    // // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n  \r\n    // const handleSubmit2 = (e) => {\r\n    //   e.preventDefault();\r\n  \r\n    //   fetch(\"http://localhost:8081/Edit\", {\r\n    //     method: \"POST\",\r\n    //     headers: {\r\n    //       \"Content-Type\": \"application/json\",\r\n    //     },\r\n    //     body: JSON.stringify({\r\n    //       cname: values.id\r\n    //     }),\r\n    //   })\r\n    //     .then((res) => res.json())\r\n    //     .then((data) => {\r\n    //       if (data.message) {\r\n    //         setRegisterStatus(data.message);\r\n    //         navigate('/Edit2');\r\n    //       } else {\r\n    //         setRegisterStatus(\"Concert created\");\r\n    //         console.log(data);\r\n    //         navigate('/Edit2');\r\n    //       }\r\n    //     })\r\n    //     .catch((error) => {\r\n    //       console.error(\"Error:\", error);\r\n    //     });\r\n    // };\r\n  \r\n    // const handleInput = (event) => {\r\n    //   setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n    // };\r\n    \r\n  \r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n     navigate('/ShowAndBook');\r\n    };\r\n  \r\n  \r\n  return (\r\n    <div>\r\n        <>\r\n    <div className=' text-center'>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n  <button type=\"button\" class=\"btn btn-success\" > <Link className=\"nav-link \" aria-current=\"page\" to=\"/ShowAndBook\">Book Ticket</Link></button>\r\n  <button type='button' className='btn btn-danger'>\r\n            <Link className='nav-link' aria-current='page' to='/Delete'>\r\n              Delete Ticket\r\n            </Link>\r\n            </button>\r\n</div>\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success my-3\">Show Concerts</button>\r\n</div>\r\n\r\n<h1>Show Concert</h1>\r\n<div className='text-center'>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\ShowAndBook.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\Booked.js",[],[],"C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\DelTicket.js",["189","190"],[],"import React,{useState} from 'react'\r\n// import { Link } from 'react-router-dom'\r\nimport { Link, useNavigate } from 'react-router-dom'\r\nexport default function Delete() {\r\n   const [RegisterStatus, setRegisterStatus] = useState(\"\");\r\n  const navigate = useNavigate();\r\n  const [values, setValues] = useState({\r\n    tid: '',\r\n    \r\n  });\r\n\r\n  // const [errors, setErrors] = useState({});\r\n  // const [concertData, setConcertData] = useState([]); // New state to store the retrieved data\r\n\r\n  \r\n  const handleInput = (event) => {\r\n    setValues((prev) => ({ ...prev, [event.target.name]: event.target.value }));\r\n  };\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    \r\n    e.preventDefault();\r\n\r\n    fetch(\"http://localhost:8081/DelTicket\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n      },\r\n      body: JSON.stringify({\r\n        id: values.id,\r\n\r\n       \r\n      }),\r\n    })\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        if (data.message) {\r\n        //   a=values.id;\r\n    // console.log(a);\r\n          setRegisterStatus(data.message);\r\n          navigate('/TicketDeleted');\r\n        } else {\r\n        //   a=values.id;\r\n    // console.log(a);\r\n          setRegisterStatus(\"Concert created\");\r\n          console.log(data);\r\n          navigate('/TicketDeleted');\r\n        // navigate('/ShowAndDelete');\r\n\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Error:\", error);\r\n      });\r\n  };\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div class=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n\r\n</div>\r\n<label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 \">Concert Id</label>\r\n  <input type=\"number\" onChange={handleInput} className=\"\" name=\"id\" placeholder=\"Concert ID to Edit\" id=\"id\" />\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-danger my-3\">Delete</button>\r\n</div>\r\n\r\n\r\n<div className='text-center'>\r\n\r\n\r\n\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","C:\\Users\\om javheri\\Desktop\\ConcertMS\\frontend\\src\\components\\TicketDeleted.js",["191","192","193"],[],"import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\n// let a=0;\r\n\r\n function ShowAndDelete() {\r\n    const navigate=useNavigate();\r\nconst handleSubmit=()=>{\r\n    navigate('/DelTicket');\r\n\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    <div className=' text-center'>\r\n        <div className=\"btn-group\" role=\"group\" aria-label=\"Basic example\">\r\n</div>\r\n\r\n\r\n\r\n<div className='text-center'>\r\n\r\n<label htmlFor=\"exampleFormControlInput1\" className=\"form-label mb-3 my-3 mx-3 \">Ticket Deleted</label>\r\n  {/* <input type=\"number\" onChange={handleInput} className=\"\" name=\"id\" placeholder=\"Concert ID to Edit\" id=\"id\" /> */}\r\n\r\n<div><button type=\"submit\" onClick={handleSubmit} className=\"btn btn-success\">Back</button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    </div>\r\n    </>\r\n  )\r\n}\r\nexport default ShowAndDelete;\r\n\r\n",{"ruleId":"194","severity":1,"message":"195","line":1,"column":26,"nodeType":"196","messageId":"197","endLine":1,"endColumn":35},{"ruleId":"194","severity":1,"message":"198","line":6,"column":12,"nodeType":"196","messageId":"197","endLine":6,"endColumn":26},{"ruleId":"194","severity":1,"message":"199","line":17,"column":12,"nodeType":"196","messageId":"197","endLine":17,"endColumn":18},{"ruleId":"194","severity":1,"message":"200","line":17,"column":20,"nodeType":"196","messageId":"197","endLine":17,"endColumn":29},{"ruleId":"194","severity":1,"message":"201","line":1,"column":15,"nodeType":"196","messageId":"197","endLine":1,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"198","line":7,"column":10,"nodeType":"196","messageId":"197","endLine":7,"endColumn":24},{"ruleId":"194","severity":1,"message":"199","line":19,"column":12,"nodeType":"196","messageId":"197","endLine":19,"endColumn":18},{"ruleId":"194","severity":1,"message":"200","line":19,"column":20,"nodeType":"196","messageId":"197","endLine":19,"endColumn":29},{"ruleId":"202","severity":1,"message":"203","line":47,"column":13,"nodeType":"196","messageId":"204","endLine":47,"endColumn":14},{"ruleId":"202","severity":1,"message":"203","line":52,"column":13,"nodeType":"196","messageId":"204","endLine":52,"endColumn":14},{"ruleId":"194","severity":1,"message":"201","line":1,"column":15,"nodeType":"196","messageId":"197","endLine":1,"endColumn":23},{"ruleId":"194","severity":1,"message":"205","line":1,"column":26,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"206","line":9,"column":10,"nodeType":"196","messageId":"197","endLine":9,"endColumn":24},{"ruleId":"194","severity":1,"message":"198","line":26,"column":10,"nodeType":"196","messageId":"197","endLine":26,"endColumn":24},{"ruleId":"194","severity":1,"message":"207","line":28,"column":18,"nodeType":"196","messageId":"197","endLine":28,"endColumn":27},{"ruleId":"194","severity":1,"message":"198","line":26,"column":10,"nodeType":"196","messageId":"197","endLine":26,"endColumn":24},{"ruleId":"194","severity":1,"message":"199","line":32,"column":10,"nodeType":"196","messageId":"197","endLine":32,"endColumn":16},{"ruleId":"194","severity":1,"message":"200","line":32,"column":18,"nodeType":"196","messageId":"197","endLine":32,"endColumn":27},{"ruleId":"194","severity":1,"message":"208","line":3,"column":5,"nodeType":"196","messageId":"197","endLine":3,"endColumn":6},{"ruleId":"194","severity":1,"message":"201","line":1,"column":15,"nodeType":"196","messageId":"197","endLine":1,"endColumn":23},{"ruleId":"194","severity":1,"message":"195","line":1,"column":24,"nodeType":"196","messageId":"197","endLine":1,"endColumn":33},{"ruleId":"194","severity":1,"message":"209","line":3,"column":10,"nodeType":"196","messageId":"197","endLine":3,"endColumn":14},{"ruleId":"194","severity":1,"message":"198","line":5,"column":11,"nodeType":"196","messageId":"197","endLine":5,"endColumn":25},{"ruleId":"194","severity":1,"message":"201","line":1,"column":17,"nodeType":"196","messageId":"197","endLine":1,"endColumn":25},{"ruleId":"194","severity":1,"message":"195","line":1,"column":27,"nodeType":"196","messageId":"197","endLine":1,"endColumn":36},{"ruleId":"194","severity":1,"message":"209","line":2,"column":10,"nodeType":"196","messageId":"197","endLine":2,"endColumn":14},"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'RegisterStatus' is assigned a value but never used.","'errors' is assigned a value but never used.","'setErrors' is assigned a value but never used.","'useState' is defined but never used.","no-const-assign","'a' is constant.","const","'useContext' is defined but never used.","'registerStatus' is assigned a value but never used.","'setValues' is assigned a value but never used.","'a' is assigned a value but never used.","'Link' is defined but never used."]